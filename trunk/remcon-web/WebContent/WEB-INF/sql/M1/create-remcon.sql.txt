use remcon;

/**
Hay que agregar la sucursal, y que dependa de la empresa, a su vez, los Centros de costo, dependen de la sucursal.
*/

CREATE TABLE IF NOT EXISTS tBranch(
	cId					BIGINT  NOT NULL AUTO_INCREMENT PRIMARY KEY,
	cName				VARCHAR(50),
	cEnterprise			BIGINT,
	cAddress			VARCHAR(100),
	cComuna				BIGINT,
	cPhone				VARCHAR(15)
) ENGINE=innoDB;


CREATE TABLE IF NOT EXISTS tFile (
	cId				BIGINT  NOT NULL AUTO_INCREMENT PRIMARY KEY,
	cDesc			VARCHAR(100),
	cContent		LONGTEXT,
    cFileName		VARCHAR(100) NOT NULL,
    cSize			BIGINT,
    cCategory		BIGINT
) ENGINE=innoDB;

CREATE TABLE IF NOT EXISTS tFileCategory (
	cId				BIGINT  NOT NULL AUTO_INCREMENT PRIMARY KEY,
	cName			VARCHAR(100) NOT NULL,
    cContentType	VARCHAR(100) NOT NULL
) ENGINE=innoDB;

CREATE TABLE `tParameter` (
  `cId` BIGINT PRIMARY KEY UNIQUE AUTO_INCREMENT,
  `cKey` 	varchar(20) NOT NULL,
  cLabel	varchar(100) NOT NULL,
  `cValue`	Varchar(100) NOT NULL,
  cDataType		BIGINT NOT NULL
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS tRol (
	cId			BIGINT  NOT NULL AUTO_INCREMENT PRIMARY KEY,
	cName		VARCHAR(50) NULL ,
	cDeleted	BIT NOT NULL DEFAULT 0
) ENGINE=innoDB;

CREATE TABLE IF NOT EXISTS tR_UserRol (
	cUser 		BIGINT NOT NULL,
	cRol		BIGINT NOT NULL,
	PRIMARY KEY(cUser,cRol)
) ENGINE=innoDB;

CREATE TABLE IF NOT EXISTS tOption (
	cId			BIGINT  NOT NULL AUTO_INCREMENT,
	cKey		VARCHAR(20) NOT NULL UNIQUE,
	cLabel 		VARCHAR(50) NOT NULL,
	cUrl		VARCHAR(100) NULL,
	cParent		BIGINT NULL,
	cType		BIGINT NOT NULL DEFAULT '1',
	PRIMARY KEY(cId)
) ENGINE=innoDB;

CREATE TABLE IF NOT EXISTS tR_RolOption (
	cRol		BIGINT NOT NULL,
	cOption		BIGINT NOT NULL,
	PRIMARY KEY(cRol, cOption)
) ENGINE=innoDB;

CREATE TABLE tComuna (
  `cId` BIGINT UNIQUE AUTO_INCREMENT,
  `cName` varchar(50) NOT NULL,
  `cRegion` Integer NOT NULL,
  `cPrioridad` Integer NOT NULL DEFAULT '0',
	PRIMARY KEY(cId)  
) ENGINE=InnoDB;

CREATE TABLE `tBoard` (
  `cId` BIGINT UNIQUE AUTO_INCREMENT,
  `cType` varchar(15) NOT NULL,
  `cKey` varchar(15) DEFAULT '',
  `cValue` Varchar(200) NOT NULL,
  cEnable BIT NOT NULL DEFAULT 1,
	PRIMARY KEY(cId)
) ENGINE=InnoDB;

CREATE TABLE `tCountry` (
 	cId	 BIGINT UNIQUE AUTO_INCREMENT,
 	cCode char(3) NOT NULL DEFAULT '' UNIQUE,
 	cName varchar(60) NOT NULL DEFAULT '',
	PRIMARY KEY(cId)
) ENGINE=InnoDB;
 
 /* Crea tabla Empleados */
create table tEmployee (
	cId				BIGINT(20)  NOT NULL auto_increment, 
	cRut			VARCHAR(11) NOT NULL unique,
	cName			VARCHAR(20) NOT NULL,
	cLastName1		VARCHAR(20) NOT NULL,
	cLastName2		VARCHAR(20) NOT NULL,
	cBirthDate		DATE COMMENT 'Fecha de nacimiento',
	cAddress		VARCHAR(100) COMMENT 'Direccion particular',
	cGenere			BIGINT(20) NOT NULL COMMENT 'Genero Femenino o Masculino',
	cComuna			BIGINT(20) NOT NULL,
	cCountry		BIGINT(20) NOT NULL COMMENT 'Nacionalidad',
	cPhone			VARCHAR(10),
	cMaritalStatus	BIGINT(20) NOT NULL COMMENT 'Estado Civil',
	cMovil			VARCHAR(10),
	cEmail			VARCHAR(50),
	cContractType	BIGINT(20) NOT NULL COMMENT 'Tipo de contrato: fijo o indefinido',
	cStartContract	DATE NOT NULL COMMENT 'Inicio de contrato',
	cEndContract	DATE NULL COMMENT 'Fin de contrato',
	cProfile		BIGINT(20) NOT NULL COMMENT 'Cargo de la persona',
	cPFM			BIGINT(20) NOT NULL,
	cHealth			BIGINT(20) NOT NULL,
	cGratificationType	BIGINT(20) NOT NULL COMMENT 'Tipo de gratificacion',
	cPaymentType	BIGINT(20) NOT NULL COMMENT 'Tipo de pago',
	cTimeType		BIGINT(20) NOT NULL COMMENT 'Tipo de jornada, full-time o part-time',
	cMobilization	DOUBLE COMMENT 'Movilizacion',
	cFeeding		DOUBLE COMMENT 'Alimentacion',
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tEnterprise (
	cId					BIGINT(20)  NOT NULL auto_increment, 
	cRut				VARCHAR(11) NOT NULL UNIQUE,
	cName				VARCHAR(30) NOT NULL  COMMENT 'Nombre o razon social',
	cLegalRep			VARCHAR(50) NOT NULL  COMMENT 'Representante legal',
	cRutLegalRep		VARCHAR(11) NOT NULL  COMMENT 'Rut del representante legal',
	cCategory			VARCHAR(50)  COMMENT 'Giro o Rubro',
	cAddress			VARCHAR(100),
	cComuna				BIGINT(20) NOT NULL,
	cPhone				VARCHAR(10),
	cMutual				BIGINT(20) NOT NULL,
	cMutualFactor		DOUBLE COMMENT 'Factor Mutual',
	cCompensationFund	BIGINT(20) NOT NULL COMMENT 'Caja de compensacion',
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

/*
create table tMutual (
	cId					BIGINT(20) NOT NULL auto_increment, 
	cName				VARCHAR(40) NOT NULL,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tCompensationFund (
	cId					BIGINT(20) NOT NULL auto_increment, 
	cName				VARCHAR(20) NOT NULL,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;
*/

create table tCostCenter(
	cId 				BIGINT(20) NOT NULL auto_increment, 
	cName				VARCHAR(20) NOT NULL,
	cBranch				BIGINT(20) NOT NULL,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tContractType(
	cId 				BIGINT(20) NOT NULL auto_increment, 
	cName				VARCHAR(20) NOT NULL,
	cBody				LONGTEXT,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tProfile (
	cId				BIGINT(20) NOT NULL auto_increment, 
	cName			VARCHAR(20) NOT NULL,
	cCostCenter		BIGINT(20) NOT NULL,
	cCompanyCost	DOUBLE NOT NULL,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

/*
Administadora de fondos de pension, en ingles se escribe como "Pension Fund Manager" (PFM), 
de aqui el nombre de la tabla.
En esta tabla se van a registrar los atributos especiales, los nombres de las AFP, estan en la tabla tBoard 
*/
create table tPFMAttribute(
	cId				BIGINT(20) NOT NULL auto_increment, 
	cPFM			BIGINT(20) NOT NULL,
	cFactor			DOUBLE NOT NULL,
	cSIS			DOUBLE NOT NULL,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tHealthAttribute (
	cId				BIGINT(20) NOT NULL auto_increment, 
	cHealth			BIGINT(20) NOT NULL,
	cFactor			DOUBLE NOT NULL,
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

/*
En esta tabla se graban para cada Employee:
	- Los APV
	- La cuenta2
	- El adicional de salud.
	
*/
create table tAccount (
	cId				BIGINT(20) NOT NULL auto_increment,
	cEmployee		BIGINT(20) NOT NULL, 
	cName			VARCHAR(50) NOT NULL,  
	cInstitution	BIGINT(20) NOT NULL,
	cAccountType	BIGINT(20) NOT NULL,
	cNumber			VARCHAR(15) NOT NULL,
	cCurrency		BIGINT(20) NOT NULL,	
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tGratificationType(
	cId			BIGINT(20) NOT NULL auto_increment,
	cName		VARCHAR(50) NOT NULL,
	cPolynomial	VARCHAR(200), 
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

/**
create table tBook(
	cId			BIGINT(20) NOT NULL auto_increment,
	cPeriod		DATE NOT NULL,
	cUF
	cFactorHorasExtra
	
	PRIMARY KEY (cId)
) ENGINE=InnoDB;

create table tBookEmployee(
	cId			BIGINT(20) NOT NULL auto_increment,
	cBook		BIGINT(20) NOT NULL,
	cEmployee	BIGINT(20) NOT NULL,
	cTimeType	
	cWorkDays	Integer,
	cSualdoBase		BIGINT(20) NOT NULL,
	*SueldoGanado	
	cTipoGratification	BIGINT(20) NOT NULL,
	cMontoGratificacion
	cCantidadHorasExtras
	cMontoHorasExtras
	cParticipation
	cB01
	cB02
	cB03
	cB04
	cB05
	cB06
	cB07
	cB08
	cB09
	cB10
	cOtrosHaberes
	cAguinaldo
	cOtrosHaberesImponibles
	*TotalHaberesImponibles
	cTopeImponiblePrevisional
	cTopeImponibleSeguroCesantia
	*RentaAfecta
	cTramoAsignacionFamiliar
	cCargas						Integer
	cValorPorCargas
	cFamiliarRetroactivo
	cFood
	cMovilizacion
	cViaticos
	cOtrosNoImponibles
	cMesDeAviso
	cIAS 					COMMENT 'Indemnisacion años de servicio'
	cFeriadoProporcional
	cIndemnisacionVoluntaira
	*TotalHaberesNoImponibles
	*TotalHaberes
	cAFPCodigo
	cAFPSeguroObligatorio
	cAVP					COMMENT 'Monto APV'
	cCuenta2				COMMENT 'Cuenta 2, Ahorro AFP'
	cHealthCode				COMMENT 'Codigo de sistema de salud'
	cTipoPlanHealth			COMMENT 'UF, %'
	cPlanPactadoHealth		COMMENT 'Monto pactado, puedes ser en uf's o %'
	cPlanPactadoHealthPS	COMMENT 'Plan en pesos'
	cCotizacionLegal
	*CotizacionAdicional
	cCotisacionSaludRebaja	COMMENT 'Preguntar que es'
	cTipoSeguroCesantia		
	cMontoSeguroCesantia
	cImpuestoUnico
	*SubtotalDescuentosLegales
	cAnticipoViatico
	cPrestamoEmpresa
	cPrestamoCajaCompenzacion
	cAhorroCajaCompenzacion
	cRetencionesJudiciales
	*SubTotalOtrosDescuentos
	*TotalDescuentos
	*AlcanceLiquido
	cAnticipoSueldo
	*LiquidoPagar
	
	PRIMARY KEY (cId)
) ENGINE=InnoDB;
*/

 /** V I S T A S **/

DROP VIEW IF EXISTS vDataType;
CREATE VIEW vDataType
AS
	SELECT cId, cValue AS cName 
	FROM tBoard 
	WHERE cType='DATA_TYPE';


DROP VIEW IF EXISTS vType;
DROP VIEW IF EXISTS vTypeOption;
CREATE VIEW vTypeOption
AS
	SELECT cId, cValue AS cName 
	FROM tBoard 
	WHERE cType='TYPE_OPTION';

DROP VIEW IF EXISTS vMaritalStatus;
CREATE VIEW vMaritalStatus
AS
	SELECT cId, cValue AS cName 
	FROM tBoard 
	WHERE cType='MARITAL_STATUS';

DROP VIEW IF EXISTS vGenere;
CREATE VIEW vGenere
AS
	SELECT cId, cValue AS cName 
	FROM remcon.tBoard 
	WHERE cType='GENERE';

DROP VIEW IF EXISTS vCurrency;
CREATE VIEW vCurrency
AS
	SELECT cId, cValue AS cName 
	FROM remcon.tBoard 
	WHERE cType='CURRENCY';

DROP VIEW IF EXISTS vMutual;
CREATE VIEW vMutual
AS
	SELECT cId, cValue AS cName 
	FROM remcon.tBoard 
	WHERE cType='MUTUAL';

DROP VIEW IF EXISTS vPFM;
CREATE VIEW vPFM
AS
	SELECT	a.cId, a.cKey, a.cValue AS cName, a.cEnable, b.cFactor, b.cSIS 
	FROM remcon.tBoard AS a
	LEFT JOIN remcon.tPFMAttribute AS b ON a.cId = b.cPFM
	WHERE a.cType='PFM';
 
DROP VIEW IF EXISTS vHealth;
CREATE VIEW vHealth
AS
	SELECT	a.cId, a.cKey, a.cValue AS cName, a.cEnable, b.cFactor
	FROM remcon.tBoard AS a
	LEFT JOIN remcon.tHealthAttribute AS b ON a.cId = b.cHealth
	WHERE a.cType='HEALTH';
 
DROP VIEW IF EXISTS vPaymentType;
CREATE VIEW vPaymentType
AS
	SELECT cId, cValue AS cName 
	FROM remcon.tBoard 
	WHERE cType='PAYMENT_TYPE';
 
 
DROP VIEW IF EXISTS vAccountType;
CREATE VIEW vAccountType
AS
	SELECT cId, cValue AS cName 
	FROM remcon.tBoard 
	WHERE cType='ACCOUNT_TYPE';
  