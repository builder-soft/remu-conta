DROP PROCEDURE if exists pSavePeriod;
DELIMITER $$

/***********************
Crea o actualiza la tabla tPeriod si no existe el registro.
*/
CREATE PROCEDURE pSavePeriod(IN pDate DATE, OUT pPeriod BIGINT)
BEGIN
/** 
TODO: Hay que sacar el valor de la UF y Factor desde una tabla histÃ³rica 
por si hay que recalcular para atras...
*/
	DECLARE vCurrentUF, vOvertimeFactor, vGratificationFactor, vMinSalary,
			vLimitIPS, vLimitInsurance, vLimitHealth, vUTM DOUBLE DEFAULT 0;
	DECLARE vDaysForYear INTEGER DEFAULT 0;
	DECLARE vId, vPeriodStatus BIGINT DEFAULT -1;

	SET vCurrentUF =			(SELECT cValue FROM tParameter WHERE cKey = 'CURRENT_UF');
	SET vOvertimeFactor =		(SELECT cValue FROM tParameter WHERE cKey = 'OVERTIME_FACTOR');
	SET vGratificationFactor =	(SELECT cValue FROM tParameter WHERE cKey = 'GRATIFICATION_FACTOR');
	SET vMinSalary =			(SELECT cValue FROM tParameter WHERE cKey = 'BASE_SALARY');
	SET vLimitIPS =				(SELECT cValue FROM tParameter WHERE cKey = 'LIMIT_IPS');
	SET vLimitInsurance =		(SELECT cValue FROM tParameter WHERE cKey = 'LIMIT_INSURANCE');
	SET vLimitHealth =			(SELECT cValue FROM tParameter WHERE cKey = 'LIMIT_HEALTH');
	SET vUTM =					(SELECT cValue FROM tParameter WHERE cKey = 'UTM');
	SET vDaysForYear =			(SELECT cValue FROM tParameter WHERE cKey = 'DAYS_FOR_YEAR');
	
	SELECT	cId, cPeriodStatus
	INTO	vId, vPeriodStatus
	FROM	tPeriod
	WHERE	cDate = pDate;

	/*
	select vId, vPeriodStatus;
	*/
	
	IF (vId > -1) THEN
		IF (vPeriodStatus = 2) THEN
			UPDATE	tPeriod
			SET		cUF = vCurrentUF,
					cOvertimeFactor = vOvertimeFactor,
					cGratificationFactor = vGratificationFactor,
					cMinSalary = vMinSalary,
					cLimitGratification = vMinSalary * vGratificationFactor,
					cLImitIPS = vLimitIPS,
					cLimitInsurance = vLimitInsurance,
					cLimitHealth = vLimitHealth,
					cUTM = vUTM,
					cDaysForYear = vDaysForYear 
			WHERE	cDate = pDate;
		END IF;
		/*
		SELECT	cId
		INTO	pPeriod 
		FROM	tPeriod 
		WHERE	cDate = pDate;
		*/
		SET pPeriod = vId; 
	ELSE
		INSERT INTO tPeriod(cDate, cUF, cOvertimeFactor, cGratificationFactor, cMinSalary,
				cLimitGratification, cLimitIPS, cLimitInsurance, cLimitHealth,
				cUTM, cDaysForYear) 
		VALUES(pDate, vCurrentUF, vOvertimeFactor, vGratificationFactor, vMinSalary,
				cMinSalary * cGratificationFactor, vLimitIPS, vLimitInsurance, vLimitHealth,
				vUTM, vDaysForYear);
		SET pPeriod = LAST_INSERT_ID();
	END IF;
END$$

DELIMITER ;
