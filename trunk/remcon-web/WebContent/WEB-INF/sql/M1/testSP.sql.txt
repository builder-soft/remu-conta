DROP VIEW IF EXISTS remcon.vBook;

CREATE VIEW remcon.vBook
AS
SELECT	a.cId AS cId,
		a.cPeriod,
		d.cDate,
		a.cEmployee,
		e.cLastName1,
		d.cUF,
		a.cWorkDays,
		d.cMinSalary,
		a.cSalaryRoot,
		a.cSalaryReceived,
		b.cGratificationType,
		b.cGratificationAmount,
		d.cLimitGratification,				/* 4.75 Ingresos mínimos */
		a.cOvertime,						/* Cantidad de horas extras */
		b.cOvertimeAmount,					/* Se calcula (SalaryRoot * 0.0777) * cOvertime */
		b.cParticipation,
		b.cB01,
		b.cB02,
		b.cB03,
		b.cB04,
		b.cB05,
		b.cB06,
		b.cB07,
		b.cB08,
		b.cB09,
		b.cB10,
		b.cExtraPay,
		b.cTotalIncomeTaxable,				/* Total Haberes Imponibles * /
		c.cLimitTaxableForecast,			/* Tope Imponible Previsional */
		c.cLimitTaxableDismissInsurance,	/* Tope Imponible Seguro Cesantia - Parámetro del mes, es un valor fijo */
		
		0 AS cIncome,						/* Renta Afecta */
		b.cFamilyAssignmentStretch,			/* Tramo asignacion familiar */
		
		a.cHorary,
		b.cId AS cAssetsId,
		b.cRewardAmount,
		b.cFamilyAssignment,
		b.cFamilyAssignmentAmount,
		b.cRetroactiveFamily,
		b.cFeeding,
		b.cMobilization,
		b.cBounty,
		b.cMonthNotification,
		b.cIAS,
		b.cProportionalHoliday,
		b.cVoluntaryindenmization,
		c.cId AS cDiscountsId,
		c.cPFM,
		c.cObligatoryInsurance,
		c.cAVPAmount,
		c.cAccount2,
		c.cHealth,
		c.cLawfulQuote,
		c.cCurrencyPlanHealth,
/*		c.cPlanHealth,*/
		c.cExtraHealth,
		c.cLimitExtraHealth,
		c.cUnemploymentInsurance,
		c.cUnemploymentInsuranceAmount,
		c.cUniqueTax,
		c.cAdvance,
		c.cLoanEnterprise,
		c.cLoanCompensationFund,
		c.cSavingCompensationFund,
		c.cJudicialRetention
/********************
*/

/*,
a.*, b.*, c.* 

	cTotalIncomeNoTaxable			/ * Total Haberes No Imponibles * /,
	cTotalIncome					/ * Total Haberes * /,
	*CotizacionAdicional			/ *  * /,
	*SubtotalDescuentosLegales,
	*SubTotalOtrosDescuentos,
	*TotalDescuentos,
	*AlcanceLiquido,
	*LiquidoPagar,*/
FROM	remcon.tBook AS a
LEFT JOIN remcon.tBookAssets	AS b ON b.cBook = a.cId
LEFT JOIN remcon.tBookDiscounts	AS c ON c.cBook = a.cId
LEFT JOIN remcon.tPeriod		AS d ON a.cPeriod = d.cId
LEFT JOIN remcon.tEmployee		AS e ON a.cEmployee = e.cId
ORDER BY a.cId;


call remcon.pSavePeriod('2012-05-01', @Period);

delete from remcon.tOvertime;
insert into remcon.tOvertime(cEmployee, cPeriod, cDate, cHours)
VALUES(1, 1, '2012-05-15', 4);


call remcon.pSaveEmployeeBook(1,'2012-05-01', 25);
call remcon.pSaveEmployeeBook(2,'2012-05-01', 30);


/*
select * from remcon.vBook;
call remcon.pGetEnterpriseConfig(1);*/


