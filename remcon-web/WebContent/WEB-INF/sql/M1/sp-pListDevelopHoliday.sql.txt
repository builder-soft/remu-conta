DROP PROCEDURE IF EXISTS pListDevelopHoliday;
DROP FUNCTION IF EXISTS fGetProgresiveDays;
DROP FUNCTION IF EXISTS fGetTakenDays;
DELIMITER $$

CREATE PROCEDURE pListDevelopHoliday(IN vEmployee BIGINT)
BEGIN
	DECLARE	vStartContract, vEndContract, vFirstDayYear, vLastDayYear, vStarPeriod, vEndPeriod DATE;
	DECLARE vStartYear, vEndYear INTEGER DEFAULT '0'; 
	DECLARE	vContractType BIGINT DEFAULT '0';
	DECLARE vDiffDays, vProgressiveDays, vLastBalance DOUBLE DEFAULT '0';
	DECLARE i, vMonthsQuoted, vNormalTaken, vProgressiveTaken INTEGER DEFAULT '0';
	
	CREATE TEMPORARY TABLE tempTable(
		cId					BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,	
		cYear				INTEGER,
		
		cNormal				DOUBLE,
		cProgressive		DOUBLE,
		cSum				DOUBLE,
		cBalance			DOUBLE,
		
		cNormalTaken		DOUBLE,
		cProgressiveTaken	DOUBLE,
		cSumTaken			DOUBLE,
		cBalanceTaken		DOUBLE
	) ENGINE=innoDB;
	
	SELECT		cStartContract, cEndContract, cContractType, cMonthsQuoted
	INTO		vStartContract, vEndContract, vContractType, vMonthsQuoted
	FROM 		tAgreement
	WHERE		cEmployee = vEmployee;
	
	IF(vContractType = 1) THEN
		SET vEndContract = NOW(); 
	END IF;
/*
	SELECT vStartContract, vEndContract, vContractType;
*/
	SET vStartYear = YEAR(vStartContract);
	SET vEndYear = YEAR(vEndContract);
	
	SET i = vStartYear;
	
	WHILE i <= vEndYear DO
		SET vFirstDayYear = CONCAT(i, '-01-01');
		SET vLastDayYear = CONCAT(i, '-12-31');
		
		SET vStarPeriod = fGetLastDate(vStartContract, vFirstDayYear);
		SET vEndPeriod = fGetLessDate(vEndContract, vLastDayYear);
		
		SET vDiffDays = fGetProportionalDays(vStarPeriod, vEndPeriod);
		SET vProgressiveDays = fGetProgresiveDays(vMonthsQuoted, i, vStartYear, vProgressiveDays);
		SET vNormalTaken = fGetTakenDays(vEmployee, vFirstDayYear, vLastDayYear, TRUE);
		SET vProgressiveTaken = fGetTakenDays(vEmployee, vFirstDayYear, vLastDayYear, FALSE);
		
		SET vLastBalance = vLastBalance + vDiffDays+vProgressiveDays;
		
		INSERT INTO tempTable(	cYear, cNormal, 
								cProgressive, cSum, cBalance, 
								cNormalTaken, cProgressiveTaken, cBalanceTaken) 
		VALUES(					i, vDiffDays, 
								vProgressiveDays, vDiffDays+vProgressiveDays, vLastBalance, 
								vNormalTaken, vProgressiveTaken, NULL);
								
/*		SET vLastBalance = IF(i = vStartYear, 0, vDiffDays+vProgressiveDays);*/
		
		SET i = i + 1;
	END WHILE;

	SELECT	cId, cYear, 
			cNormal, 		cProgressive, 		cSum,		cBalance, 
			cNormalTaken,	cProgressiveTaken,	cSumTaken,	cBalanceTaken
	FROM	tempTable;
	
	DROP TABLE tempTable;	
END$$

CREATE FUNCTION fGetProgresiveDays(vMonthsQuoted INTEGER, vCurrentYear INTEGER, vStartYear INTEGER, vProgresive INTEGER) RETURNS DOUBLE
BEGIN
	DECLARE vOut DOUBLE DEFAULT '0';
	DECLARE vContracted INTEGER DEFAULT '0';
	
	SET vOut = vProgresive; 
	
	IF(vMonthsQuoted >= 120) THEN
		SET vContracted = vCurrentYear - vStartYear;
		
		IF(vContracted >= 3) THEN
			IF(vContracted MOD 3 = 0) THEN
				SET vOut = vProgresive + 1;
			END IF;
		END IF;
		
	END IF;

	RETURN vOut;
END$$


CREATE FUNCTION fGetTakenDays(vEmployee BIGINT, vFirstDayYear DATE, vLastDayYear DATE, vIsNormal BOOLEAN) RETURNS INTEGER
BEGIN
	DECLARE vOut, vNormal, vProgressive	INTEGER DEFAULT 0;
	DECLARE vDone		BOOLEAN DEFAULT FALSE;
	DECLARE vId			BIGINT;
	DECLARE vFrom, vTo	DATE;
	DECLARE curHolidays CURSOR FOR 
			SELECT cId FROM tHoliday 
			WHERE cEmployee = vEmployee AND YEAR(cFrom) = YEAR(vFirstDayYear) ;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET vDone = TRUE;
	
	OPEN curHolidays;
	curHolidays_loop: LOOP
		FETCH curHolidays INTO vId;
	
		IF(vDone) THEN 
			LEAVE curHolidays_loop;
		END IF;	
		
		SELECT	cFrom, cNormal, cProgressive
		INTO	vFrom, vNormal, vProgressive
		FROM	tHoliday
		WHERE	cId = vId;
		
		IF(YEAR(vFrom) = YEAR(vTo)) THEN
			IF(vIsNormal) THEN
				SET vOut = vNormal;
			ELSE
				SET vOut = vProgressive;
			END IF;
		ELSE
			SET vOut = -1;
		END IF;
		
		
	END LOOP curHolidays_loop;
	CLOSE curHolidays;
	
	/*
	

	

OK	ver si hay vacaciones tomadas en el año
OK	si tiene vacaciones tomadas
	
OK		recorrer las vacaciones tomadas	
OK			ver si el periodo de vacaciones tomadas son de uno o dos años.
OK			si son de 1 año -> entonces
				contar los días tomados por el rango de fechas
			si no
				recorrer los días seleccionados y contar cuantos son del año en curso.
			fin
		fin recorrido
	fin
*/
	
	/*
	IF(vIsNormal) THEN
		SET vOut = (SELECT IFNULL(SUM(cNormal), 0) 
					FROM tHoliday 
					WHERE cEmployee = vEmployee AND
						vFirstDayYear <= cFrom);
	ELSE
		SET vOut = (SELECT IFNULL(SUM(cProgressive), 0) 
					FROM tHoliday 
					WHERE cEmployee = vEmployee AND
						vFirstDayYear <= cFrom );
	END IF;
	*/
	
	RETURN vOut;
END$$

DELIMITER ;

